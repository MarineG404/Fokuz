name: Build Android APK

on:
    # Manual trigger only (click "Run workflow" in GitHub Actions tab)
    workflow_dispatch:
    # Or when you create a version tag like v1.0.0
    push:
        tags:
            - "v*"

jobs:
    # 1. Setup environment and dependencies
    setup:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3

            - name: Install dependencies (allow legacy peer deps)
              run: npm install --legacy-peer-deps --no-audit --no-fund

    # 2. Generate Android project
    prebuild:
        runs-on: ubuntu-latest
        needs: setup
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3

            - name: Install dependencies (allow legacy peer deps)
              run: npm install --legacy-peer-deps --no-audit --no-fund

            - name: Generate Android project
              run: npx expo prebuild --platform android --clean

    # 3. Build APK
    build:
        runs-on: ubuntu-latest
        needs: prebuild
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3

            - name: Install dependencies (allow legacy peer deps)
              run: npm install --legacy-peer-deps --no-audit --no-fund

            - name: Generate Android project
              run: npx expo prebuild --platform android --clean

            - name: Build APK with Gradle
              run: |
                  cd android
                  ./gradlew assembleRelease

            - name: Upload APK artifact
              uses: actions/upload-artifact@v4
              with:
                  name: fokuz-apk
                  # Upload any APK produced by the Gradle build (robust to filename)
                  path: android/app/build/outputs/apk/release/*.apk

    # 4. Cleanup after successful build
    cleanup:
        runs-on: ubuntu-latest
        needs: build
        if: always() # Run cleanup even if build fails
        steps:
            - name: Cleanup workspace
              run: |
                  echo "ðŸ§¹ Cleaning up build artifacts..."
                  # Clean Gradle cache
                  rm -rf ~/.gradle/caches/
                  # Clean npm cache
                  npm cache clean --force
                  # Clean Android build outputs
                  rm -rf android/app/build/
                  rm -rf android/.gradle/
                  # Clean Expo prebuild outputs
                  rm -rf android/
                  rm -rf ios/
                  echo "âœ… Cleanup completed!"

            - name: Build summary
              run: |
                  echo "ðŸ“Š Build Summary:"
                  echo "- Setup: âœ… Dependencies installed"
                  echo "- Prebuild: âœ… Android project generated"
                  echo "- Build: âœ… APK compiled successfully"
                  echo "- Cleanup: âœ… Temporary files removed"
                  echo "ðŸš€ APK is ready for download in artifacts!"
